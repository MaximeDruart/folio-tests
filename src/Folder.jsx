/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react"
import { useFrame } from "@react-three/fiber"
import { Edges, Text, useGLTF, Points, PointMaterial } from "@react-three/drei"
import { MeshBasicMaterial } from "three"
import * as random from "maath/random/dist/maath-random.esm"

function FolderModel(props) {
  const { nodes } = useGLTF("/folder.glb")
  return (
    <group rotation-y={-Math.PI / 2} {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry}>
        <meshBasicMaterial attach='material' transparent opacity={0} />
        <Edges visible={true} renderOrder={1000} color='white' />
      </mesh>
    </group>
  )
}

function Stars(props) {
  const ref = useRef()
  const [sphere] = useState(() => random.inSphere(new Float32Array(5000), { radius: 1.5 }))
  useFrame((state, delta) => {
    ref.current.rotation.x -= delta / 10
    ref.current.rotation.y -= delta / 15
  })
  return (
    <group rotation={[0, 0, Math.PI / 4]}>
      <Points ref={ref} positions={sphere} stride={3} frustumCulled={false} {...props}>
        <PointMaterial transparent color='#ffa0e0' size={0.01} sizeAttenuation={true} depthWrite={false} />
      </Points>
    </group>
  )
}

export function Folder({ position, project }) {
  return (
    <group>
      <FolderModel position={position} />
      <Text font='SearchMono' position={position}>
        {project.dateString}
      </Text>
      {/* <Stars /> */}
    </group>
  )
}

useGLTF.preload("/folder.glb")
